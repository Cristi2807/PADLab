version: '3'
services:
  gateway:
    image: cristi2807/padgateway:latest
    container_name: "gateway"
    depends_on:
      - postgres
      - db_pgadmin
    ports:
      - "5000:5000"
    restart: unless-stopped
    environment:
      - REDIS_URL=redis_cache:6379
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - ROUTING_THRESHOLD=2
    networks:
      pad-net:

  service_discovery:
    image: cristi2807/padservicediscovery:latest
    container_name: "service_discovery"
    restart: unless-stopped
    depends_on:
      - gateway
    networks:
      pad-net:
             
  inventory_service:
    image: cristi2807/padinventoryservice:latest
    container_name: "inventory"
    restart: unless-stopped
    depends_on:
      - service_discovery
    environment:
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - MY_IP=inventory
      - DB_HOST=my_postgres
      - DB_RO_HOST=my_postgres
      - DB_NAME=inventory_pad_lab
      - DB_USER=cristi
      - DB_PASSWORD=p4ssw0rd
    networks:
      pad-net:
      
  catalog_service:
    image: cristi2807/padcatalogservice:latest
    container_name: "catalog"
    restart: unless-stopped
    depends_on:
      - service_discovery
    environment:
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - MY_IP=catalog
      - DB_HOST=my_postgres
      - DB_RO_HOST=my_postgres
      - DB_NAME=catalog_pad_lab
      - DB_USER=cristi
      - DB_PASSWORD=p4ssw0rd
    networks:
      pad-net:        

  inventory_service2:
    image: cristi2807/padinventoryservice:latest
    container_name: "inventory2"
    restart: unless-stopped
    depends_on:
      - service_discovery
    environment:
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - MY_IP=inventory2
      - DB_HOST=my_postgres
      - DB_RO_HOST=my_postgres
      - DB_NAME=inventory_pad_lab
      - DB_USER=cristi
      - DB_PASSWORD=p4ssw0rd
    networks:
      pad-net:
      
  catalog_service2:
    image: cristi2807/padcatalogservice:latest
    container_name: "catalog2"
    restart: unless-stopped
    depends_on:
      - service_discovery
    environment:
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - MY_IP=catalog2
      - DB_HOST=my_postgres
      - DB_RO_HOST=my_postgres
      - DB_NAME=catalog_pad_lab
      - DB_USER=cristi
      - DB_PASSWORD=p4ssw0rd
    networks:
      pad-net:        

  inventory_service3:
    image: cristi2807/padinventoryservice:latest
    container_name: "inventory3"
    restart: unless-stopped
    depends_on:
      - service_discovery
    environment:
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - MY_IP=inventory3
      - DB_HOST=my_postgres
      - DB_RO_HOST=my_postgres
      - DB_NAME=inventory_pad_lab
      - DB_USER=cristi
      - DB_PASSWORD=p4ssw0rd
    networks:
      pad-net:
      
  catalog_service3:
    image: cristi2807/padcatalogservice:latest
    container_name: "catalog3"
    restart: unless-stopped
    depends_on:
      - service_discovery
    environment:
      - SERVICE_DISCOVERY_URL=service_discovery:5001
      - MY_IP=catalog3
      - DB_HOST=my_postgres
      - DB_RO_HOST=my_postgres
      - DB_NAME=catalog_pad_lab
      - DB_USER=cristi
      - DB_PASSWORD=p4ssw0rd
    networks:
      pad-net:                
        
  # redis_db:
  #   image: redis:latest
  #   container_name: "redis_cache"
  #   restart: unless-stopped
  #   networks:
  #     pad-net:

  redis-node-1:
    image: redis:latest
    ports:
      - 7000:7000
    networks:
      pad-net:
    hostname: redis-node-1
    volumes:
      - ./7000:/redis
    command: redis-server /redis/redis.conf
  redis-node-2:
    image: redis:latest
    ports:
      - 7001:7001
    networks:
      pad-net:
    hostname: redis-node-2
    volumes:
      - ./7001:/redis
    command: redis-server /redis/redis.conf
  redis-node-3:
    image: redis:latest
    ports:
      - 7002:7002
    networks:
      pad-net:
    hostname: redis-node-3
    volumes:
      - ./7002:/redis
    command: redis-server /redis/redis.conf
  redis-node-4:
    image: redis:latest
    ports:
      - 7003:7003
    networks:
      pad-net:
    hostname: redis-node-4
    volumes:
      - ./7003:/redis
    command: redis-server /redis/redis.conf
  redis-node-5:
    image: redis:latest
    ports:
      - 7004:7004
    networks:
      pad-net:
    hostname: redis-node-5
    volumes:
      - ./7004:/redis
    command: redis-server /redis/redis.conf
  redis-node-6:
    image: redis:latest
    ports:
      - 7005:7005
    networks:
      pad-net:
    hostname: redis-node-6
    volumes:
      - ./7005:/redis
    command: redis-server /redis/redis.conf

  redis-cluster-creator:
    image: redis:latest
    ports:
      - 6999:6999
    networks:
      pad-net:
    command: redis-cli -p 7000 --cluster create redis-node-1:7000 redis-node-2:7001 redis-node-3:7002 redis-node-4:7003 redis-node-5:7004 redis-node-6:7005 --cluster-replicas 1 --cluster-yes
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
      

  postgres:
    image: postgres:14-alpine
    container_name: my_postgres
    environment:
      - POSTGRES_USER=cristi
      - POSTGRES_PASSWORD=p4ssw0rd
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./PADInventoryService/storage/db.sql:/docker-entrypoint-initdb.d/inventory.sql
      - ./PADCatalogService/storage/db.sql:/docker-entrypoint-initdb.d/catalog.sql
    networks:
      pad-net:
        
  db_pgadmin:
    image: dpage/pgadmin4
    container_name: pad_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=cristi@boris.info
      - PGADMIN_DEFAULT_PASSWORD=p4ssw0rd
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5481:80"
    networks:
      pad-net:

  prometheus:
    image: prom/prometheus:v2.47.2
    depends_on:
      - service_discovery
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      pad-net:

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    volumes:
      - ./grafana:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    networks:
      pad-net:
  

volumes:
  pg_data:   
  pgadmin_data:
networks:
  pad-net:
    driver: bridge
